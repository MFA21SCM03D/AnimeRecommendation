# -*- coding: utf-8 -*-
"""Movie_Recommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dUTovODmNedQbbDl4IFbhqpj3M9z3yfy
"""

import pandas as pd 
import io
from google.colab import files
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import CountVectorizer

dataset = pd.read_csv("/content/AnimeDataset.csv")

dataset.shape

dataset.head(10)

def get_index(title):
  return dataset[dataset.title == title]['index'].values[0]

def get_index(other_names):
  return dataset[dataset.other_names == other_names]['index'].values[0]

def get_title(index):
  return dataset[dataset.index == index]['title'].values[0]

index = get_index("Gantz")
print(index)

print (dataset.columns)

def combine_features(row):
  return row['anime_type']+""+row['genre']

dataset["combined_features"] = dataset.apply(combine_features, axis = 1)

print (dataset.head())

cv = CountVectorizer()
cv = cv.fit_transform(dataset['combined_features'])

similarity_matrix = cosine_similarity(cv)

search = input("Enter a anime : ")
search = get_index(search)

similar_movies = list(enumerate(similarity_matrix[search]))
similar_movies = sorted(similar_movies, key = lambda x:x[1], reverse=True)

i = 0
for movies in similar_movies:
  i= i + 1
  print(get_title(movies[0]))
  if i > 10:
    break

